{"ast":null,"code":"var _jsxFileName = \"/Users/ehsan/myProject/frontend/src/components/Reservation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ClientInfoForm from './ClientInfoForm';\nimport ServiceInfoForm from './ServiceInfoForm';\nimport AvailabilityDetails from './AvailabilityDetails';\nimport Success from './Success';\nimport axios from 'axios';\nimport { LocationAndServiceInfoUrl, reserve_url } from '../constants/urls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reservation() {\n  _s();\n\n  const [serviceAndLocation, setServiceAndLocation] = useState({});\n  const [step, setStep] = useState(1);\n  const [clientInfo, setClientInfo] = useState({\n    first_name: '',\n    last_name: '',\n    phone_number: '',\n    email: ''\n  });\n  const [serviceInfo, setServiceInfo] = useState({\n    name: '',\n    location: '',\n    date: ''\n  });\n  const [availablities, setAvailabilities] = useState({});\n  useEffect(() => {\n    axios.get(LocationAndServiceInfoUrl).then(response => {\n      setServiceAndLocation(response.data);\n      console.log(response.data);\n    });\n  }, []);\n\n  const nextStep = () => {\n    setStep(prevStep => {\n      return prevStep + 1;\n    });\n  };\n\n  const prevStep = () => {\n    setStep(prevStep => {\n      return prevStep - 1;\n    });\n  };\n\n  const handleChangeClient = input => e => {\n    setClientInfo(prevState => {\n      return { ...prevState,\n        [input]: e.target.value\n      };\n    });\n  };\n\n  const handleChangeService = input => e => {\n    setServiceInfo(prevState => {\n      return { ...prevState,\n        [input]: e.target.value\n      };\n    });\n  };\n\n  const handleChangeAvailabilities = value => {\n    console.log(value);\n    setAvailabilities(value);\n  };\n\n  const handleReservation = (slot, employee_id) => {\n    const start_time = slot[0];\n    const end_time = slot[1];\n    axios({\n      method: 'post',\n      url: reserve_url,\n      data: {\n        client: {\n          first_name: clientInfo.first_name,\n          last_name: clientInfo.last_name,\n          phone_number: clientInfo.phone_number,\n          email: clientInfo.email\n        },\n        service: {\n          name: serviceInfo.name,\n          location: serviceInfo.location,\n          date: serviceInfo.date\n        },\n        reservation: {\n          start_time: start_time,\n          end_time: end_time,\n          employee_id: employee_id\n        }\n      }\n    });\n  }; // const {first_name, last_name, phone_number, email} = clientInfo\n  // const {name, location, date} = serviceInfo\n\n\n  switch (step) {\n    case 1:\n      return /*#__PURE__*/_jsxDEV(ClientInfoForm, {\n        nextStep: nextStep,\n        handleChangeClient: handleChangeClient,\n        clientInfo: clientInfo,\n        serviceInfo: serviceInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(ServiceInfoForm, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        serviceAndLocation: serviceAndLocation,\n        handleChangeService: handleChangeService,\n        handleChangeAvailabilities: handleChangeAvailabilities,\n        clientInfo: clientInfo,\n        serviceInfo: serviceInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this);\n\n    case 3:\n      return /*#__PURE__*/_jsxDEV(AvailabilityDetails, {\n        nextStep: nextStep,\n        prevStep: prevStep,\n        handleReservation: handleReservation,\n        clientInfo: clientInfo,\n        serviceInfo: serviceInfo,\n        avails: availablities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this);\n\n    case 4:\n      return /*#__PURE__*/_jsxDEV(Success, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 20\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Reservation, \"PIWPh09ugPz3gnd/sULYJjWndGM=\");\n\n_c = Reservation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reservation\");","map":{"version":3,"sources":["/Users/ehsan/myProject/frontend/src/components/Reservation.js"],"names":["React","useEffect","useState","ClientInfoForm","ServiceInfoForm","AvailabilityDetails","Success","axios","LocationAndServiceInfoUrl","reserve_url","Reservation","serviceAndLocation","setServiceAndLocation","step","setStep","clientInfo","setClientInfo","first_name","last_name","phone_number","email","serviceInfo","setServiceInfo","name","location","date","availablities","setAvailabilities","get","then","response","data","console","log","nextStep","prevStep","handleChangeClient","input","e","prevState","target","value","handleChangeService","handleChangeAvailabilities","handleReservation","slot","employee_id","start_time","end_time","method","url","client","service","reservation"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ClientInfoForm from './ClientInfoForm'\nimport ServiceInfoForm from './ServiceInfoForm'\nimport AvailabilityDetails from './AvailabilityDetails'\nimport Success from './Success'\nimport axios from 'axios'\nimport {LocationAndServiceInfoUrl, reserve_url} from '../constants/urls'\n\nexport default function Reservation() {\n    const [serviceAndLocation, setServiceAndLocation] = useState({})\n    const [step, setStep] = useState(1)\n    const [clientInfo, setClientInfo] = useState({\n        first_name: '',\n        last_name: '',\n        phone_number: '',\n        email: '',\n    })\n    const [serviceInfo, setServiceInfo] = useState({\n        name: '',\n        location: '',\n        date: '',      \n    })\n    const [availablities, setAvailabilities] = useState({})\n\n    useEffect(() => {\n        axios.get(LocationAndServiceInfoUrl).then(\n            response => {\n                setServiceAndLocation(response.data)\n                console.log(response.data)\n            }\n        )\n      }, []);\n\n    const nextStep = () => {\n        setStep(prevStep => {\n            return prevStep+1\n        })\n    }\n\n    const prevStep = () => {\n        setStep(prevStep => {\n            return prevStep-1\n        })\n    }\n\n    const handleChangeClient = input => e => {\n        setClientInfo(prevState => {\n            return {\n                ...prevState,\n                [input]: e.target.value,\n            }\n        })\n    }\n\n    const handleChangeService = input => e => {\n        setServiceInfo(prevState => {\n            return {\n                ...prevState,\n                [input]: e.target.value,\n            }\n        })\n    }\n    const handleChangeAvailabilities = value => {\n        console.log(value)\n        setAvailabilities(value)\n    }\n\n    const handleReservation = (slot, employee_id) => {\n        const start_time = slot[0]\n        const end_time = slot[1]\n        axios({\n            method: 'post',\n            url: reserve_url,\n            data: {\n                client: {\n                    first_name: clientInfo.first_name,\n                    last_name: clientInfo.last_name,\n                    phone_number: clientInfo.phone_number,\n                    email: clientInfo.email,\n                },\n                service: {\n                    name: serviceInfo.name,\n                    location: serviceInfo.location,\n                    date: serviceInfo.date,\n                },\n                reservation: {\n                    start_time: start_time,\n                    end_time: end_time,\n                    employee_id: employee_id,\n                }\n            }\n          });\n    }\n\n    // const {first_name, last_name, phone_number, email} = clientInfo\n    // const {name, location, date} = serviceInfo\n\n    switch(step) {\n        case 1:\n            return (\n                <ClientInfoForm\n                    nextStep = {nextStep}\n                    handleChangeClient = {handleChangeClient}\n                    clientInfo = {clientInfo}\n                    serviceInfo = {serviceInfo}\n                />\n            )\n        case 2:\n            return (\n                <ServiceInfoForm\n                    nextStep = {nextStep}\n                    prevStep = {prevStep}\n                    serviceAndLocation = {serviceAndLocation}\n                    handleChangeService = {handleChangeService}\n                    handleChangeAvailabilities = {handleChangeAvailabilities}\n                    clientInfo = {clientInfo}\n                    serviceInfo = {serviceInfo}\n                />\n            )\n        case 3:\n            return (\n                <AvailabilityDetails\n                    nextStep = {nextStep}\n                    prevStep = {prevStep}\n                    handleReservation = {handleReservation}\n                    clientInfo = {clientInfo}\n                    serviceInfo = {serviceInfo}\n                    avails = {availablities}\n                />\n            )\n        case 4:\n            return <Success/>\n    }\n    return (\n        <div>\n     \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}